name: WLED compile

on:
    workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.9

    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade platformio
    - name: Set up Node.js
      uses: actions/setup-node@v4
    - name: Run PlatformIO
      run: |
        rm -rf /tmp/WLEDtemp/* || true
        mkdir -p /tmp/WLEDtemp
        wget https://github.com/wled/WLED/archive/refs/heads/main.zip -O /tmp/WLEDtemp/mm.zip
        unzip /tmp/WLEDtemp/mm.zip -d /tmp/WLEDtemp
        find /tmp/WLEDtemp -maxdepth 1 -mindepth 1 -name "*" -type d >> /tmp/WLEDtemp/wledfoldername
        cd `cat /tmp/WLEDtemp/wledfoldername`
        npm install
        echo '[env:esp01_1m_uart]' >>platformio.ini
        echo 'platform = espressif8266' >>platformio.ini
        echo 'board = esp01_1m' >>platformio.ini
        echo 'framework = arduino' >>platformio.ini
        echo '' >>platformio.ini
        echo 'build_flags = ' >>platformio.ini
        echo '  -D USERMOD_UART_PRESET_NOTIFIER' >>platformio.ini
        echo '  -D LEDPIN=4                    ' >>platformio.ini
        echo '  -D RLYPIN=16                   ' >>platformio.ini
        echo '  -D RLYMDE=1                   ' >>platformio.ini
        echo '  -D MAX_LEDS=40                ' >>platformio.ini
        echo '  -D LED_TYPES=TYPE_WS2812_RGB   ' >>platformio.ini
        echo '  -D DEFAULT_LED_COLOR_ORDER=COL_ORDER_GRB' >>platformio.ini
        echo '  -D ABL_MILLIAMPS_DEFAULT=850  ' >>platformio.ini
        echo '-D WLED_DISABLE_FLOWS' >>platformio.ini
        echo '-D WLED_DISABLE_INFRARED' >>platformio.ini
        echo '-D WLED_DISABLE_WEBSOCKETS' >>platformio.ini
        echo '-D WLED_DISABLE_ALEXA' >>platformio.ini
        echo '-D WLED_DISABLE_DISCOVERY' >>platformio.ini
        echo '-D WLED_DISABLE_HUESYNC' >>platformio.ini
        echo '-D WLED_DISABLE_MQTT' >>platformio.ini
        echo '-D WLED_DISABLE_LOXONE' >>platformio.ini
        echo '-D WLED_DISABLE_BLYNK' >>platformio.ini
        echo '-D WLED_DISABLE_CRONIXIE' >>platformio.ini
        echo '  -D USERMOD_ENABLE_TEMPERATURE=false' >>platformio.ini
        echo '  -D USERMOD_ENABLE_SENSOR=false' >>platformio.ini
        echo '' >>platformio.ini
        echo 'build_unflags = ' >>platformio.ini
        echo '  -D BOARD_HAS_PSRAM ' >>platformio.ini
        echo '  -D WLED_USE_PSRAM ' >>platformio.ini
        echo '  -D WLED_USE_PSRAM_JSON ' >>platformio.ini
        echo '  -D ALL_JSON_TO_PSRAM' >>platformio.ini
        echo '  -D WLED_RELEASE_NAME' >>platformio.ini
        echo '' >>platformio.ini
        echo 'upload_speed = 115200' >>platformio.ini
        echo 'monitor_speed = 74880' >>platformio.ini
        
        mkdir -p /tmp/WLEDtemp/`cat /tmp/WLEDtemp/wledfoldername`/usermods/usermod_uart_preset_notifier
        cp $GITHUB_WORKSPACE/usermods/usermod_uart_preset_notifier/usermod_uart_preset_notifier.cpp /tmp/WLEDtemp/`cat /tmp/WLEDtemp/wledfoldername`/usermods/usermod_uart_preset_notifier/

        pio run -e custom_build || pio run -e custom_build
    - name: Copy Files
      run: |
        cd $GITHUB_WORKSPACE
        git rm -r $GITHUB_WORKSPACE/*.bin || true
        WLEDFOLDERNAME=`cat /tmp/WLEDtemp/wledfoldername`
        cp ${WLEDFOLDERNAME}/build_output/firmware/custom_build.bin $GITHUB_WORKSPACE/
        date -I | tr -d '\n' >$GITHUB_WORKSPACE/last_update_date.txt
    - name: Commit Files
      run: |
        cd $GITHUB_WORKSPACE
        git config user.name "GitHub Actions Bot"
        git config user.email "<>"
        git add $GITHUB_WORKSPACE/custom_build.bin
        git add $GITHUB_WORKSPACE/last_update_date.txt
        git commit -m "Commit Custom Build"
        git push origin main
